/*
 * Global styles
 * Used throughout the game, or in the App container.
 */

body,
html {
  padding: 0;
  margin: 0;
  background: #333;
  color: #e6e6e6;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,
    Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

main {
  display: flex;
  flex-direction: column;
  height: 100vh;
  align-items: center;
  justify-content: space-around;
}

/* TODO: Move to .piece class, in a separate Piece.tsx component with Piece.css */
button {
  position: relative;
  background: transparent;
  /* border: 1.3vw solid #e6e6e620; */
  border-width: 0;
  width: 100%;
  aspect-ratio: 1;
  padding: 0;
  margin: 0;

  /* Font and color */
  font-size: large;
  color: blueviolet;
}

button:before {
  position: absolute;
  top: max(8%, 8px);
  left: max(8%, 8px);
  bottom: max(8%, 8px);
  right: max(8%, 8px);

  /* Content */
  background-image: url(./assets/x.svg);
  content: "";

  display: block;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  transition: opacity 1s ease-out;
}

/* Animation for scaling up from 0 to 100:
 * - Display all pieces on the board initially?
 * - Add new piece to the captured pieces list
 * - Transform a pawn to a queen 
*/
@keyframes scale-in {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

button[data-player="0"]:before {
  background-image: url(./assets/x.svg);
  animation: scale-in 0.2s ease-in-out;
}

button[data-player="1"]:before {
  background-image: url(./assets/o.svg);
  animation: scale-in 0.2s ease-in-out;
}

button:not([data-disabled]) {
  cursor: pointer;
}

@media (hover: hover) {
  button:not([data-disabled]):after {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: -10%;
    margin-left: -10%;
    width: 20%;
    border-radius: 50%;
    background: #e6e6e6;
    aspect-ratio: 1;
    transition: all 0.15s ease-in-out;
    scale: 0;
  }

  button:hover:after {
    scale: 1;
  }
}

/* 
 * Player section styles
 * TODO: Separate out into components/players.css
 * 
 * TODO: Players will be separated above/below the board, so should be divs instead of ul/li.
 */

ul {
  list-style: none;
  font-size: min(14px, 3vw);
  padding: 0;
  font-weight: bold;
  display: flex;
  width: 100%;
  justify-content: space-around;
}

li {
  opacity: 0.5;
  line-height: 1.7;
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: opacity 0.2s ease-in-out;
  text-align: center;
}

li img {
  width: 20vw;
  height: 20vw;
  margin-top: 6.4vw;
  margin-bottom: 2.1vw;
}

li[data-your-turn="true"] {
  opacity: 1;
}

li[data-player="0"]:before {
  /* background-image: url(./assets/x.svg); */
  content: "White team";
}

li[data-player="1"]:before {
  /* background-image: url(./assets/o.svg); */
  content: "Black team";
}
